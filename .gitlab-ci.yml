stages:
    - lint
    - build
    - deploy
variables:
    BRANCH_NAME: $CI_COMMIT_REF_NAME
    SERVICE: ${SERVICE_NAME_${BRANCH_NAME}}
    TAG_LATEST: $CI_REGISTRY_USER/$SERVICE:$CI_PIPELINE_ID
    SERVER_USER: ${SERVER_USER}
    SERVER_IP: ${SERVER_IP}
    SSH_KEY: ${SSH_KEY}
    

lint-test:
    image: node:18-alpine
    stage: lint
    # tags:
    #     - jenkins

    script:
        - npm install
        - npm run lint

    except:
        refs:
            - staging
            - production

publish:
    image: docker:latest
    stage: build
    # tags:
    #     - jenkins

    services:
        - docker:dind
    script:
        - docker build -t $TAG_LATEST .
        - docker login -u $CI_REGISTRY_USER -p $CI_TOKEN
        - docker push $TAG_LATEST
    only:
        refs:
            - staging
            - production

      
deployment:
    image: alpine:latest
    stage: deploy
    # tags:
    #     - jenkins

    before_script:
        - apk update && apk add openssh-client
        - chmod 400 $SSH_KEY

    script:
        - ssh -o StrictHostKeyChecking=no -i $SSH_KEY $SERVER_USER@$SERVER_IP "
          docker login -u $CI_REGISTRY_USER -p $CI_TOKEN &&
          docker pull $TAG_LATEST &&
          docker service update --force --image $TAG_LATEST $SERVICE"

    only:
        refs:
            - staging
            - production
           